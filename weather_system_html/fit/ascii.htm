<html><body>
<pre>
 
cpldfit:  version P.20131013                        Xilinx Inc.
                                  Fitter Report
Design Name: weather_system                      Date:  1-15-2015,  4:59PM
Device Used: XC2C64A-7-VQ44
Fitting Status: Successful

*************************  Mapped Resource Summary  **************************

Macrocells     Product Terms    Function Block   Registers      Pins           
Used/Tot       Used/Tot         Inps Used/Tot    Used/Tot       Used/Tot       
56 /64  ( 87%) 99  /224  ( 44%) 101 /160  ( 63%) 36 /64  ( 56%) 28 /33  ( 85%)

** Function Block Resources **

Function Mcells   FB Inps  Pterms   IO       CTC      CTR      CTS      CTE     
Block    Used/Tot Used/Tot Used/Tot Used/Tot Used/Tot Used/Tot Used/Tot Used/Tot
FB1      16/16*    18/40    30/56     7/ 8    0/1      0/1      0/1      0/1
FB2      16/16*    20/40    34/56     8/ 9    0/1      0/1      0/1      0/1
FB3      16/16*    31/40    21/56     2/ 9    0/1      0/1      0/1      0/1
FB4       8/16     32/40    14/56     3/ 7    0/1      0/1      0/1      0/1
         -----    -------  -------   -----    ---      ---      ---      ---
Total    56/64    101/160   99/224   20/33    0/4      0/4      0/4      0/4 

CTC - Control Term Clock
CTR - Control Term Reset
CTS - Control Term Set
CTE - Control Term Output Enable

* - Resource is exhausted

** Global Control Resources **

GCK         GSR         GTS         DGE         
Used/Tot    Used/Tot    Used/Tot    Used/Tot    
1/3         0/1         0/4         0/0

Signal 'clock' mapped onto global clock net GCK0.

** Pin Resources **

Signal Type    Required     Mapped  |  Pin Type            Used    Total 
------------------------------------|------------------------------------
Input         :    7           7    |  I/O              :    21     25
Output        :   20          20    |  GCK/IO           :     3      3
Bidirectional :    0           0    |  GTS/IO           :     4      4
GCK           :    1           1    |  GSR/IO           :     0      1
GTS           :    0           0    |  
GSR           :    0           0    |  
                 ----        ----
        Total     28          28

End of Mapped Resource Summary
**************************  Errors and Warnings  ***************************

WARNING:Cpld - Unable to retrieve the path to the iSE Project Repository. Will
   use the default filename of 'weather_system.ise'.
INFO:Cpld - Inferring BUFG constraint for signal 'clock' based upon the LOC
   constraint 'P43'. It is recommended that you declare this BUFG explicitedly
   in your design. Note that for certain device families the output of a BUFG
   constraint can not drive a gated clock, and the BUFG constraint will be
   ignored.
*************************  Summary of Mapped Logic  ************************

** 20 Outputs **

Signal                                   Total Total Bank Loc     Pin   Pin       Pin     I/O      I/O       Slew Reg     Reg Init
Name                                     Pts   Inps               No.   Type      Use     STD      Style     Rate Use     State
wind_dir_speed<8>                        3     8     2    FB1_1   38    I/O       O       LVCMOS33           FAST         
wind_dir_speed<7>                        4     10    2    FB1_2   37    I/O       O       LVCMOS33           FAST         
wind_dir_speed<6>                        3     9     2    FB1_3   36    I/O       O       LVCMOS33           FAST         
wind_dir_speed<5>                        3     10    2    FB1_9   34    GTS/I/O   O       LVCMOS33           FAST         
wind_dir_speed<4>                        2     6     2    FB1_10  33    GTS/I/O   O       LVCMOS33           FAST         
wind_dir_speed<3>                        3     10    2    FB1_11  32    GTS/I/O   O       LVCMOS33           FAST         
wind_dir_speed<2>                        3     9     2    FB1_12  31    GTS/I/O   O       LVCMOS33           FAST         
wind_dir_speed<9>                        4     10    1    FB2_1   39    I/O       O       LVCMOS33           FAST         
wind_dir_speed<10>                       4     9     1    FB2_2   40    I/O       O       LVCMOS33           FAST         
wind_dir_speed<11>                       4     10    1    FB2_5   41    I/O       O       LVCMOS33           FAST         
wind_dir_speed<12>                       3     7     1    FB2_6   42    I/O       O       LVCMOS33           FAST         
wind_dir_speed<13>                       4     10    1    FB2_8   44    GCK/I/O   O       LVCMOS33           FAST         
wind_dir_speed<14>                       4     9     1    FB2_10  1     GCK/I/O   O       LVCMOS33           FAST         
wind_dir_speed<15>                       4     10    1    FB2_12  2     I/O       O       LVCMOS33           FAST         
code_wind_speed<0>                       6     9     1    FB2_13  3     I/O       O       LVCMOS33           FAST         
wind_dir_speed<1>                        4     10    2    FB3_1   29    I/O       O       LVCMOS33           FAST         
wind_dir_speed<0>                        3     8     2    FB3_3   27    I/O       O       LVCMOS33           FAST         
code_wind_speed<1>                       5     10    1    FB4_1   5     I/O       O       LVCMOS33           FAST         
code_wind_speed<2>                       3     8     1    FB4_2   6     I/O       O       LVCMOS33           FAST         
code_wind_speed<3>                       2     7     1    FB4_7   8     I/O       O       LVCMOS33           FAST         

** 36 Buried Nodes **

Signal                                   Total Total Loc     Reg     Reg Init
Name                                     Pts   Inps          Use     State
U1/U_counter_5bit/count_int<4>           2     7     FB1_4   TFF     RESET
U1/U_counter_5bit/count_int<3>           2     6     FB1_5   TFF     RESET
U1/U_counter_5bit/count_int<2>           2     5     FB1_6   TFF     RESET
U1/U_counter_5bit/count_int<1>           2     4     FB1_7   TFF     RESET
U1/speed_code<1>                         2     2     FB1_8   DEFF    RESET
U1/U_counter_5bit/count_int<0>           2     3     FB1_13  DFF     RESET
U1/speed_code<0>                         2     2     FB1_14  DEFF    RESET
U1/U_counter_5bit/counter_rst_delay      1     1     FB1_15  DFF     RESET
U1/U_freq_divider/count_int<0>           0     0     FB1_16  TFF     RESET
U1/U_freq_divider/count_int<6>           1     6     FB2_3   TFF     RESET
U1/U_freq_divider/count_int<5>           1     5     FB2_4   TFF     RESET
U1/U_freq_divider/count_int<7>           1     7     FB2_7   TFF     RESET
U1/U_freq_divider/count_int<4>           1     4     FB2_9   TFF     RESET
U1/U_freq_divider/count_int<3>           1     3     FB2_11  TFF     RESET
U1/U_freq_divider/count_int<2>           1     2     FB2_14  TFF     RESET
U1/U_freq_divider/count_int<1>           1     1     FB2_15  TFF     RESET
U1/counter_ena                           2     3     FB2_16  DFF     RESET
U1/U_freq_divider/count_int<17>          1     17    FB3_2   TFF     RESET
U1/U_freq_divider/count_int<11>          1     11    FB3_4   TFF     RESET
U1/U_freq_divider/count_int<10>          1     10    FB3_5   TFF     RESET
U1/U_freq_divider/count_int<16>          1     16    FB3_6   TFF     RESET
U1/U_freq_divider/count_int<9>           1     9     FB3_7   TFF     RESET
U1/U_freq_divider/count_int<8>           1     8     FB3_8   TFF     RESET
U1/speed_code<4>                         2     2     FB3_9   DEFF    RESET
U1/U_freq_divider/count_int<15>          1     15    FB3_10  TFF     RESET
U1/U_freq_divider/count_int<14>          1     14    FB3_11  TFF     RESET
U1/U_freq_divider/count_int<13>          1     13    FB3_12  TFF     RESET
U1/speed_code<3>                         2     2     FB3_13  DEFF    RESET
U1/U_freq_divider/count_int<12>          1     12    FB3_14  TFF     RESET
U1/U_risingedge_detector/anemometer_reg  0     0     FB3_15  DFF     RESET
U1/speed_code<2>                         2     2     FB3_16  DEFF    RESET
U1/counter_rst                           1     22    FB4_8   DFF     RESET
U1/U_freq_divider/count_int<21>          1     21    FB4_9   TFF     RESET
U1/U_freq_divider/count_int<20>          1     20    FB4_10  TFF     RESET
U1/U_freq_divider/count_int<19>          1     19    FB4_12  TFF     RESET
U1/U_freq_divider/count_int<18>          1     18    FB4_16  TFF     RESET

** 8 Inputs **

Signal                                   Bank Loc     Pin   Pin       Pin     I/O      I/O
Name                                                  No.   Type      Use     STD      Style
clock                                    1    FB2_7   43    GCK/I/O   GCK     LVCMOS33 KPR
mode_select                              2    FB3_10  22    I/O       I       LVCMOS33 KPR
code_select                              2    FB3_12  20    I/O       I       LVCMOS33 KPR
anemometer                               2    FB3_15  18    I/O       I       LVCMOS33 KPR
weathercock<0>                           1    FB4_11  12    I/O       I       LVCMOS33 KPR
weathercock<1>                           1    FB4_13  13    I/O       I       LVCMOS33 KPR
weathercock<2>                           1    FB4_14  14    I/O       I       LVCMOS33 KPR
weathercock<3>                           1    FB4_15  16    I/O       I       LVCMOS33 KPR

Legend:
Pin No.   - ~     - User Assigned
I/O Style - OD    - OpenDrain
          - PU    - Pullup
          - KPR   - Keeper
          - S     - SchmittTrigger
          - DG    - DataGate
Reg Use   - LATCH - Transparent latch
          - DFF   - D-flip-flop
          - DEFF  - D-flip-flop with clock enable
          - TFF   - T-flip-flop
          - TDFF  - Dual-edge-triggered T-flip-flop
          - DDFF  - Dual-edge-triggered flip-flop
          - DDEFF - Dual-edge-triggered flip-flop with clock enable
          /S (after any above flop/latch type) indicates initial state is Set
**************************  Function Block Details  ************************
Legend:
Total Pt     - Total product terms used by the macrocell signal
Loc          - Location where logic was mapped in device
Pin Type/Use - I  - Input             GCK - Global clock
               O  - Output            GTS - Global Output Enable
              (b) - Buried macrocell  GSR - Global Set/Reset
              VRF - Vref
Pin No.      - ~  - User Assigned
*********************************** FB1  ***********************************
This function block is part of I/O Bank number:               2
Number of function block inputs used/remaining:               18/22
Number of function block control terms used/remaining:        0/4
Number of PLA product terms used/remaining:                   30/26
Signal                        Total Loc     Pin  Pin     Pin   CTC CTR CTS CTE
Name                          Pt            No.  Type    Use   
wind_dir_speed<8>             3     FB1_1   38   I/O     O                 
wind_dir_speed<7>             4     FB1_2   37   I/O     O                 
wind_dir_speed<6>             3     FB1_3   36   I/O     O                 
U1/U_counter_5bit/count_int<4>
                              2     FB1_4        (b)     (b)               
U1/U_counter_5bit/count_int<3>
                              2     FB1_5        (b)     (b)               
U1/U_counter_5bit/count_int<2>
                              2     FB1_6        (b)     (b)               
U1/U_counter_5bit/count_int<1>
                              2     FB1_7        (b)     (b)               
U1/speed_code<1>              2     FB1_8        (b)     (b)               
wind_dir_speed<5>             3     FB1_9   34   GTS/I/O O                 
wind_dir_speed<4>             2     FB1_10  33   GTS/I/O O                 
wind_dir_speed<3>             3     FB1_11  32   GTS/I/O O                 
wind_dir_speed<2>             3     FB1_12  31   GTS/I/O O                 
U1/U_counter_5bit/count_int<0>
                              2     FB1_13  30   GSR/I/O (b)               
U1/speed_code<0>              2     FB1_14       (b)     (b)               
U1/U_counter_5bit/counter_rst_delay
                              1     FB1_15       (b)     (b)               
U1/U_freq_divider/count_int<0>
                              0     FB1_16       (b)     (b)               

Signals Used by Logic in Function Block
  1: U1/U_counter_5bit/count_int<0>        7: U1/counter_ena    13: U1/speed_code<4> 
  2: U1/U_counter_5bit/count_int<1>        8: U1/counter_rst    14: mode_select 
  3: U1/U_counter_5bit/count_int<2>        9: U1/speed_code<0>  15: weathercock<0> 
  4: U1/U_counter_5bit/count_int<3>       10: U1/speed_code<1>  16: weathercock<1> 
  5: U1/U_counter_5bit/count_int<4>       11: U1/speed_code<2>  17: weathercock<2> 
  6: U1/U_counter_5bit/counter_rst_delay  12: U1/speed_code<3>  18: weathercock<3> 

Signal                     1         2         3         4 FB      
Name             0----+----0----+----0----+----0----+----0 Inputs  
wind_dir_speed<8> 
                  ..........XXXXXXXX...................... 8       
wind_dir_speed<7> 
                  ........XXXXXXXXXX...................... 10      
wind_dir_speed<6> 
                  .........XXXXXXXXX...................... 9       
U1/U_counter_5bit/count_int<4> 
                  XXXXXXX................................. 7       
U1/U_counter_5bit/count_int<3> 
                  XXXX.XX................................. 6       
U1/U_counter_5bit/count_int<2> 
                  XXX..XX................................. 5       
U1/U_counter_5bit/count_int<1> 
                  XX...XX................................. 4       
U1/speed_code<1>  .X.....X................................ 2       
wind_dir_speed<5> 
                  ........XXXXXXXXXX...................... 10      
wind_dir_speed<4> 
                  ............XXXXXX...................... 6       
wind_dir_speed<3> 
                  ........XXXXXXXXXX...................... 10      
wind_dir_speed<2> 
                  .........XXXXXXXXX...................... 9       
U1/U_counter_5bit/count_int<0> 
                  X....XX................................. 3       
U1/speed_code<0>  X......X................................ 2       
U1/U_counter_5bit/counter_rst_delay 
                  .......X................................ 1       
U1/U_freq_divider/count_int<0> 
                  ........................................ 0       
                 0----+----1----+----2----+----3----+----4
                           0         0         0         0
*********************************** FB2  ***********************************
This function block is part of I/O Bank number:               1
Number of function block inputs used/remaining:               20/20
Number of function block control terms used/remaining:        0/4
Number of PLA product terms used/remaining:                   34/22
Signal                        Total Loc     Pin  Pin     Pin   CTC CTR CTS CTE
Name                          Pt            No.  Type    Use   
wind_dir_speed<9>             4     FB2_1   39   I/O     O                 
wind_dir_speed<10>            4     FB2_2   40   I/O     O                 
U1/U_freq_divider/count_int<6>
                              1     FB2_3        (b)     (b)               
U1/U_freq_divider/count_int<5>
                              1     FB2_4        (b)     (b)               
wind_dir_speed<11>            4     FB2_5   41   I/O     O                 
wind_dir_speed<12>            3     FB2_6   42   I/O     O                 
U1/U_freq_divider/count_int<7>
                              1     FB2_7   43   GCK/I/O GCK               
wind_dir_speed<13>            4     FB2_8   44   GCK/I/O O                 
U1/U_freq_divider/count_int<4>
                              1     FB2_9        (b)     (b)               
wind_dir_speed<14>            4     FB2_10  1    GCK/I/O O                 
U1/U_freq_divider/count_int<3>
                              1     FB2_11       (b)     (b)               
wind_dir_speed<15>            4     FB2_12  2    I/O     O                 
code_wind_speed<0>            6     FB2_13  3    I/O     O                 
U1/U_freq_divider/count_int<2>
                              1     FB2_14       (b)     (b)               
U1/U_freq_divider/count_int<1>
                              1     FB2_15       (b)     (b)               
U1/counter_ena                2     FB2_16       (b)     (b)               

Signals Used by Logic in Function Block
  1: U1/U_freq_divider/count_int<0>   8: U1/U_risingedge_detector/anemometer_reg  15: code_select 
  2: U1/U_freq_divider/count_int<1>   9: U1/speed_code<0>                         16: mode_select 
  3: U1/U_freq_divider/count_int<2>  10: U1/speed_code<1>                         17: weathercock<0> 
  4: U1/U_freq_divider/count_int<3>  11: U1/speed_code<2>                         18: weathercock<1> 
  5: U1/U_freq_divider/count_int<4>  12: U1/speed_code<3>                         19: weathercock<2> 
  6: U1/U_freq_divider/count_int<5>  13: U1/speed_code<4>                         20: weathercock<3> 
  7: U1/U_freq_divider/count_int<6>  14: anemometer                              

Signal                     1         2         3         4 FB      
Name             0----+----0----+----0----+----0----+----0 Inputs  
wind_dir_speed<9> 
                  ........XXXXX..XXXXX.................... 10      
wind_dir_speed<10> 
                  .........XXXX..XXXXX.................... 9       
U1/U_freq_divider/count_int<6> 
                  XXXXXX.................................. 6       
U1/U_freq_divider/count_int<5> 
                  XXXXX................................... 5       
wind_dir_speed<11> 
                  ........XXXXX..XXXXX.................... 10      
wind_dir_speed<12> 
                  ...........XX..XXXXX.................... 7       
U1/U_freq_divider/count_int<7> 
                  XXXXXXX................................. 7       
wind_dir_speed<13> 
                  ........XXXXX..XXXXX.................... 10      
U1/U_freq_divider/count_int<4> 
                  XXXX.................................... 4       
wind_dir_speed<14> 
                  .........XXXX..XXXXX.................... 9       
U1/U_freq_divider/count_int<3> 
                  XXX..................................... 3       
wind_dir_speed<15> 
                  ........XXXXX..XXXXX.................... 10      
code_wind_speed<0> 
                  ..........XXX.XXXXXX.................... 9       
U1/U_freq_divider/count_int<2> 
                  XX...................................... 2       
U1/U_freq_divider/count_int<1> 
                  X....................................... 1       
U1/counter_ena    .......X.....XX......................... 3       
                 0----+----1----+----2----+----3----+----4
                           0         0         0         0
*********************************** FB3  ***********************************
This function block is part of I/O Bank number:               2
Number of function block inputs used/remaining:               31/9
Number of function block control terms used/remaining:        0/4
Number of PLA product terms used/remaining:                   21/35
Signal                        Total Loc     Pin  Pin     Pin   CTC CTR CTS CTE
Name                          Pt            No.  Type    Use   
wind_dir_speed<1>             4     FB3_1   29   I/O     O                 
U1/U_freq_divider/count_int<17>
                              1     FB3_2   28   I/O     (b)               
wind_dir_speed<0>             3     FB3_3   27   I/O     O                 
U1/U_freq_divider/count_int<11>
                              1     FB3_4        (b)     (b)               
U1/U_freq_divider/count_int<10>
                              1     FB3_5        (b)     (b)               
U1/U_freq_divider/count_int<16>
                              1     FB3_6   23   I/O     (b)               
U1/U_freq_divider/count_int<9>
                              1     FB3_7        (b)     (b)               
U1/U_freq_divider/count_int<8>
                              1     FB3_8        (b)     (b)               
U1/speed_code<4>              2     FB3_9        (b)     (b)               
U1/U_freq_divider/count_int<15>
                              1     FB3_10  22   I/O     I                 
U1/U_freq_divider/count_int<14>
                              1     FB3_11  21   I/O     (b)               
U1/U_freq_divider/count_int<13>
                              1     FB3_12  20   I/O     I                 
U1/speed_code<3>              2     FB3_13       (b)     (b)               
U1/U_freq_divider/count_int<12>
                              1     FB3_14  19   I/O     (b)               
U1/U_risingedge_detector/anemometer_reg
                              0     FB3_15  18   I/O     I                 
U1/speed_code<2>              2     FB3_16       (b)     (b)               

Signals Used by Logic in Function Block
  1: U1/U_counter_5bit/count_int<2>   12: U1/U_freq_divider/count_int<1>  22: U1/speed_code<0> 
  2: U1/U_counter_5bit/count_int<3>   13: U1/U_freq_divider/count_int<2>  23: U1/speed_code<1> 
  3: U1/U_counter_5bit/count_int<4>   14: U1/U_freq_divider/count_int<3>  24: U1/speed_code<2> 
  4: U1/U_freq_divider/count_int<0>   15: U1/U_freq_divider/count_int<4>  25: U1/speed_code<3> 
  5: U1/U_freq_divider/count_int<10>  16: U1/U_freq_divider/count_int<5>  26: U1/speed_code<4> 
  6: U1/U_freq_divider/count_int<11>  17: U1/U_freq_divider/count_int<6>  27: mode_select 
  7: U1/U_freq_divider/count_int<12>  18: U1/U_freq_divider/count_int<7>  28: weathercock<0> 
  8: U1/U_freq_divider/count_int<13>  19: U1/U_freq_divider/count_int<8>  29: weathercock<1> 
  9: U1/U_freq_divider/count_int<14>  20: U1/U_freq_divider/count_int<9>  30: weathercock<2> 
 10: U1/U_freq_divider/count_int<15>  21: U1/counter_rst                  31: weathercock<3> 
 11: U1/U_freq_divider/count_int<16> 

Signal                     1         2         3         4 FB      
Name             0----+----0----+----0----+----0----+----0 Inputs  
wind_dir_speed<1> 
                  .....................XXXXXXXXXX......... 10      
U1/U_freq_divider/count_int<17> 
                  ...XXXXXXXXXXXXXXXXX.................... 17      
wind_dir_speed<0> 
                  .......................XXXXXXXX......... 8       
U1/U_freq_divider/count_int<11> 
                  ...XX......XXXXXXXXX.................... 11      
U1/U_freq_divider/count_int<10> 
                  ...X.......XXXXXXXXX.................... 10      
U1/U_freq_divider/count_int<16> 
                  ...XXXXXXX.XXXXXXXXX.................... 16      
U1/U_freq_divider/count_int<9> 
                  ...X.......XXXXXXXX..................... 9       
U1/U_freq_divider/count_int<8> 
                  ...X.......XXXXXXX...................... 8       
U1/speed_code<4>  ..X.................X................... 2       
U1/U_freq_divider/count_int<15> 
                  ...XXXXXX..XXXXXXXXX.................... 15      
U1/U_freq_divider/count_int<14> 
                  ...XXXXX...XXXXXXXXX.................... 14      
U1/U_freq_divider/count_int<13> 
                  ...XXXX....XXXXXXXXX.................... 13      
U1/speed_code<3>  .X..................X................... 2       
U1/U_freq_divider/count_int<12> 
                  ...XXX.....XXXXXXXXX.................... 12      
U1/speed_code<2>  X...................X................... 2       
                 0----+----1----+----2----+----3----+----4
                           0         0         0         0
*********************************** FB4  ***********************************
This function block is part of I/O Bank number:               1
Number of function block inputs used/remaining:               32/8
Number of function block control terms used/remaining:        0/4
Number of PLA product terms used/remaining:                   14/42
Signal                        Total Loc     Pin  Pin     Pin   CTC CTR CTS CTE
Name                          Pt            No.  Type    Use   
code_wind_speed<1>            5     FB4_1   5    I/O     O                 
code_wind_speed<2>            3     FB4_2   6    I/O     O                 
(unused)                      0     FB4_3        (b)           
(unused)                      0     FB4_4        (b)           
(unused)                      0     FB4_5        (b)           
(unused)                      0     FB4_6        (b)           
code_wind_speed<3>            2     FB4_7   8    I/O     O                 
U1/counter_rst                1     FB4_8        (b)     (b)               
U1/U_freq_divider/count_int<21>
                              1     FB4_9        (b)     (b)               
U1/U_freq_divider/count_int<20>
                              1     FB4_10       (b)     (b)               
(unused)                      0     FB4_11  12   I/O     I     
U1/U_freq_divider/count_int<19>
                              1     FB4_12       (b)     (b)               
(unused)                      0     FB4_13  13   I/O     I     
(unused)                      0     FB4_14  14   I/O     I     
(unused)                      0     FB4_15  16   I/O     I     
U1/U_freq_divider/count_int<18>
                              1     FB4_16       (b)     (b)               

Signals Used by Logic in Function Block
  1: U1/U_freq_divider/count_int<0>   12: U1/U_freq_divider/count_int<1>   23: U1/speed_code<0> 
  2: U1/U_freq_divider/count_int<10>  13: U1/U_freq_divider/count_int<20>  24: U1/speed_code<1> 
  3: U1/U_freq_divider/count_int<11>  14: U1/U_freq_divider/count_int<21>  25: U1/speed_code<2> 
  4: U1/U_freq_divider/count_int<12>  15: U1/U_freq_divider/count_int<2>   26: U1/speed_code<3> 
  5: U1/U_freq_divider/count_int<13>  16: U1/U_freq_divider/count_int<3>   27: U1/speed_code<4> 
  6: U1/U_freq_divider/count_int<14>  17: U1/U_freq_divider/count_int<4>   28: code_select 
  7: U1/U_freq_divider/count_int<15>  18: U1/U_freq_divider/count_int<5>   29: mode_select 
  8: U1/U_freq_divider/count_int<16>  19: U1/U_freq_divider/count_int<6>   30: weathercock<1> 
  9: U1/U_freq_divider/count_int<17>  20: U1/U_freq_divider/count_int<7>   31: weathercock<2> 
 10: U1/U_freq_divider/count_int<18>  21: U1/U_freq_divider/count_int<8>   32: weathercock<3> 
 11: U1/U_freq_divider/count_int<19>  22: U1/U_freq_divider/count_int<9>  

Signal                     1         2         3         4 FB      
Name             0----+----0----+----0----+----0----+----0 Inputs  
code_wind_speed<1> 
                  ......................XXXXXXXXXX........ 10      
code_wind_speed<2> 
                  .......................XXXXXX.XX........ 8       
code_wind_speed<3> 
                  ......................XXXXX.X..X........ 7       
U1/counter_rst    XXXXXXXXXXXXXXXXXXXXXX.................. 22      
U1/U_freq_divider/count_int<21> 
                  XXXXXXXXXXXXX.XXXXXXXX.................. 21      
U1/U_freq_divider/count_int<20> 
                  XXXXXXXXXXXX..XXXXXXXX.................. 20      
U1/U_freq_divider/count_int<19> 
                  XXXXXXXXXX.X..XXXXXXXX.................. 19      
U1/U_freq_divider/count_int<18> 
                  XXXXXXXXX..X..XXXXXXXX.................. 18      
                 0----+----1----+----2----+----3----+----4
                           0         0         0         0
*******************************  Equations  ********************************

********** Mapped Logic **********

FDCPE_U1/U_counter_5bit/count_int0: FDCPE port map (U1/U_counter_5bit/count_int(0),U1/U_counter_5bit/count_int_D(0),clock,'0','0','1');
U1/U_counter_5bit/count_int_D(0) <= ((NOT U1/U_counter_5bit/counter_rst_delay AND 
	U1/U_counter_5bit/count_int(0) AND NOT U1/counter_ena)
	OR (NOT U1/U_counter_5bit/counter_rst_delay AND 
	NOT U1/U_counter_5bit/count_int(0) AND U1/counter_ena));

FTCPE_U1/U_counter_5bit/count_int1: FTCPE port map (U1/U_counter_5bit/count_int(1),U1/U_counter_5bit/count_int_T(1),clock,'0','0','1');
U1/U_counter_5bit/count_int_T(1) <= ((U1/U_counter_5bit/counter_rst_delay AND 
	U1/U_counter_5bit/count_int(1))
	OR (NOT U1/U_counter_5bit/counter_rst_delay AND 
	U1/U_counter_5bit/count_int(0) AND U1/counter_ena));

FTCPE_U1/U_counter_5bit/count_int2: FTCPE port map (U1/U_counter_5bit/count_int(2),U1/U_counter_5bit/count_int_T(2),clock,'0','0','1');
U1/U_counter_5bit/count_int_T(2) <= ((U1/U_counter_5bit/counter_rst_delay AND 
	U1/U_counter_5bit/count_int(2))
	OR (NOT U1/U_counter_5bit/counter_rst_delay AND 
	U1/U_counter_5bit/count_int(0) AND U1/counter_ena AND U1/U_counter_5bit/count_int(1)));

FTCPE_U1/U_counter_5bit/count_int3: FTCPE port map (U1/U_counter_5bit/count_int(3),U1/U_counter_5bit/count_int_T(3),clock,'0','0','1');
U1/U_counter_5bit/count_int_T(3) <= ((U1/U_counter_5bit/counter_rst_delay AND 
	U1/U_counter_5bit/count_int(3))
	OR (NOT U1/U_counter_5bit/counter_rst_delay AND 
	U1/U_counter_5bit/count_int(0) AND U1/counter_ena AND U1/U_counter_5bit/count_int(1) AND 
	U1/U_counter_5bit/count_int(2)));

FTCPE_U1/U_counter_5bit/count_int4: FTCPE port map (U1/U_counter_5bit/count_int(4),U1/U_counter_5bit/count_int_T(4),clock,'0','0','1');
U1/U_counter_5bit/count_int_T(4) <= ((U1/U_counter_5bit/count_int(4) AND 
	U1/U_counter_5bit/counter_rst_delay)
	OR (NOT U1/U_counter_5bit/counter_rst_delay AND 
	U1/U_counter_5bit/count_int(0) AND U1/counter_ena AND U1/U_counter_5bit/count_int(1) AND 
	U1/U_counter_5bit/count_int(2) AND U1/U_counter_5bit/count_int(3)));

FDCPE_U1/U_counter_5bit/counter_rst_delay: FDCPE port map (U1/U_counter_5bit/counter_rst_delay,U1/counter_rst,clock,'0','0','1');

FTCPE_U1/U_freq_divider/count_int0: FTCPE port map (U1/U_freq_divider/count_int(0),'0',clock,'0','0','1');

FTCPE_U1/U_freq_divider/count_int1: FTCPE port map (U1/U_freq_divider/count_int(1),U1/U_freq_divider/count_int(0),clock,'0','0','1');

FTCPE_U1/U_freq_divider/count_int2: FTCPE port map (U1/U_freq_divider/count_int(2),U1/U_freq_divider/count_int_T(2),clock,'0','0','1');
U1/U_freq_divider/count_int_T(2) <= (U1/U_freq_divider/count_int(0) AND 
	U1/U_freq_divider/count_int(1));

FTCPE_U1/U_freq_divider/count_int3: FTCPE port map (U1/U_freq_divider/count_int(3),U1/U_freq_divider/count_int_T(3),clock,'0','0','1');
U1/U_freq_divider/count_int_T(3) <= (U1/U_freq_divider/count_int(0) AND 
	U1/U_freq_divider/count_int(1) AND U1/U_freq_divider/count_int(2));

FTCPE_U1/U_freq_divider/count_int4: FTCPE port map (U1/U_freq_divider/count_int(4),U1/U_freq_divider/count_int_T(4),clock,'0','0','1');
U1/U_freq_divider/count_int_T(4) <= (U1/U_freq_divider/count_int(0) AND 
	U1/U_freq_divider/count_int(1) AND U1/U_freq_divider/count_int(2) AND 
	U1/U_freq_divider/count_int(3));

FTCPE_U1/U_freq_divider/count_int5: FTCPE port map (U1/U_freq_divider/count_int(5),U1/U_freq_divider/count_int_T(5),clock,'0','0','1');
U1/U_freq_divider/count_int_T(5) <= (U1/U_freq_divider/count_int(0) AND 
	U1/U_freq_divider/count_int(1) AND U1/U_freq_divider/count_int(2) AND 
	U1/U_freq_divider/count_int(3) AND U1/U_freq_divider/count_int(4));

FTCPE_U1/U_freq_divider/count_int6: FTCPE port map (U1/U_freq_divider/count_int(6),U1/U_freq_divider/count_int_T(6),clock,'0','0','1');
U1/U_freq_divider/count_int_T(6) <= (U1/U_freq_divider/count_int(0) AND 
	U1/U_freq_divider/count_int(1) AND U1/U_freq_divider/count_int(2) AND 
	U1/U_freq_divider/count_int(3) AND U1/U_freq_divider/count_int(4) AND 
	U1/U_freq_divider/count_int(5));

FTCPE_U1/U_freq_divider/count_int7: FTCPE port map (U1/U_freq_divider/count_int(7),U1/U_freq_divider/count_int_T(7),clock,'0','0','1');
U1/U_freq_divider/count_int_T(7) <= (U1/U_freq_divider/count_int(0) AND 
	U1/U_freq_divider/count_int(1) AND U1/U_freq_divider/count_int(2) AND 
	U1/U_freq_divider/count_int(3) AND U1/U_freq_divider/count_int(4) AND 
	U1/U_freq_divider/count_int(5) AND U1/U_freq_divider/count_int(6));

FTCPE_U1/U_freq_divider/count_int8: FTCPE port map (U1/U_freq_divider/count_int(8),U1/U_freq_divider/count_int_T(8),clock,'0','0','1');
U1/U_freq_divider/count_int_T(8) <= (U1/U_freq_divider/count_int(0) AND 
	U1/U_freq_divider/count_int(1) AND U1/U_freq_divider/count_int(2) AND 
	U1/U_freq_divider/count_int(3) AND U1/U_freq_divider/count_int(4) AND 
	U1/U_freq_divider/count_int(5) AND U1/U_freq_divider/count_int(6) AND 
	U1/U_freq_divider/count_int(7));

FTCPE_U1/U_freq_divider/count_int9: FTCPE port map (U1/U_freq_divider/count_int(9),U1/U_freq_divider/count_int_T(9),clock,'0','0','1');
U1/U_freq_divider/count_int_T(9) <= (U1/U_freq_divider/count_int(0) AND 
	U1/U_freq_divider/count_int(1) AND U1/U_freq_divider/count_int(2) AND 
	U1/U_freq_divider/count_int(3) AND U1/U_freq_divider/count_int(4) AND 
	U1/U_freq_divider/count_int(5) AND U1/U_freq_divider/count_int(6) AND 
	U1/U_freq_divider/count_int(7) AND U1/U_freq_divider/count_int(8));

FTCPE_U1/U_freq_divider/count_int10: FTCPE port map (U1/U_freq_divider/count_int(10),U1/U_freq_divider/count_int_T(10),clock,'0','0','1');
U1/U_freq_divider/count_int_T(10) <= (U1/U_freq_divider/count_int(0) AND 
	U1/U_freq_divider/count_int(1) AND U1/U_freq_divider/count_int(2) AND 
	U1/U_freq_divider/count_int(3) AND U1/U_freq_divider/count_int(4) AND 
	U1/U_freq_divider/count_int(5) AND U1/U_freq_divider/count_int(6) AND 
	U1/U_freq_divider/count_int(7) AND U1/U_freq_divider/count_int(8) AND 
	U1/U_freq_divider/count_int(9));

FTCPE_U1/U_freq_divider/count_int11: FTCPE port map (U1/U_freq_divider/count_int(11),U1/U_freq_divider/count_int_T(11),clock,'0','0','1');
U1/U_freq_divider/count_int_T(11) <= (U1/U_freq_divider/count_int(0) AND 
	U1/U_freq_divider/count_int(10) AND U1/U_freq_divider/count_int(1) AND 
	U1/U_freq_divider/count_int(2) AND U1/U_freq_divider/count_int(3) AND 
	U1/U_freq_divider/count_int(4) AND U1/U_freq_divider/count_int(5) AND 
	U1/U_freq_divider/count_int(6) AND U1/U_freq_divider/count_int(7) AND 
	U1/U_freq_divider/count_int(8) AND U1/U_freq_divider/count_int(9));

FTCPE_U1/U_freq_divider/count_int12: FTCPE port map (U1/U_freq_divider/count_int(12),U1/U_freq_divider/count_int_T(12),clock,'0','0','1');
U1/U_freq_divider/count_int_T(12) <= (U1/U_freq_divider/count_int(0) AND 
	U1/U_freq_divider/count_int(10) AND U1/U_freq_divider/count_int(1) AND 
	U1/U_freq_divider/count_int(2) AND U1/U_freq_divider/count_int(3) AND 
	U1/U_freq_divider/count_int(4) AND U1/U_freq_divider/count_int(5) AND 
	U1/U_freq_divider/count_int(6) AND U1/U_freq_divider/count_int(7) AND 
	U1/U_freq_divider/count_int(8) AND U1/U_freq_divider/count_int(9) AND 
	U1/U_freq_divider/count_int(11));

FTCPE_U1/U_freq_divider/count_int13: FTCPE port map (U1/U_freq_divider/count_int(13),U1/U_freq_divider/count_int_T(13),clock,'0','0','1');
U1/U_freq_divider/count_int_T(13) <= (U1/U_freq_divider/count_int(0) AND 
	U1/U_freq_divider/count_int(10) AND U1/U_freq_divider/count_int(1) AND 
	U1/U_freq_divider/count_int(2) AND U1/U_freq_divider/count_int(3) AND 
	U1/U_freq_divider/count_int(4) AND U1/U_freq_divider/count_int(5) AND 
	U1/U_freq_divider/count_int(6) AND U1/U_freq_divider/count_int(7) AND 
	U1/U_freq_divider/count_int(8) AND U1/U_freq_divider/count_int(9) AND 
	U1/U_freq_divider/count_int(11) AND U1/U_freq_divider/count_int(12));

FTCPE_U1/U_freq_divider/count_int14: FTCPE port map (U1/U_freq_divider/count_int(14),U1/U_freq_divider/count_int_T(14),clock,'0','0','1');
U1/U_freq_divider/count_int_T(14) <= (U1/U_freq_divider/count_int(0) AND 
	U1/U_freq_divider/count_int(10) AND U1/U_freq_divider/count_int(1) AND 
	U1/U_freq_divider/count_int(2) AND U1/U_freq_divider/count_int(3) AND 
	U1/U_freq_divider/count_int(4) AND U1/U_freq_divider/count_int(5) AND 
	U1/U_freq_divider/count_int(6) AND U1/U_freq_divider/count_int(7) AND 
	U1/U_freq_divider/count_int(8) AND U1/U_freq_divider/count_int(9) AND 
	U1/U_freq_divider/count_int(11) AND U1/U_freq_divider/count_int(12) AND 
	U1/U_freq_divider/count_int(13));

FTCPE_U1/U_freq_divider/count_int15: FTCPE port map (U1/U_freq_divider/count_int(15),U1/U_freq_divider/count_int_T(15),clock,'0','0','1');
U1/U_freq_divider/count_int_T(15) <= (U1/U_freq_divider/count_int(0) AND 
	U1/U_freq_divider/count_int(10) AND U1/U_freq_divider/count_int(1) AND 
	U1/U_freq_divider/count_int(2) AND U1/U_freq_divider/count_int(3) AND 
	U1/U_freq_divider/count_int(4) AND U1/U_freq_divider/count_int(5) AND 
	U1/U_freq_divider/count_int(6) AND U1/U_freq_divider/count_int(7) AND 
	U1/U_freq_divider/count_int(8) AND U1/U_freq_divider/count_int(9) AND 
	U1/U_freq_divider/count_int(11) AND U1/U_freq_divider/count_int(12) AND 
	U1/U_freq_divider/count_int(13) AND U1/U_freq_divider/count_int(14));

FTCPE_U1/U_freq_divider/count_int16: FTCPE port map (U1/U_freq_divider/count_int(16),U1/U_freq_divider/count_int_T(16),clock,'0','0','1');
U1/U_freq_divider/count_int_T(16) <= (U1/U_freq_divider/count_int(0) AND 
	U1/U_freq_divider/count_int(10) AND U1/U_freq_divider/count_int(1) AND 
	U1/U_freq_divider/count_int(2) AND U1/U_freq_divider/count_int(3) AND 
	U1/U_freq_divider/count_int(4) AND U1/U_freq_divider/count_int(5) AND 
	U1/U_freq_divider/count_int(6) AND U1/U_freq_divider/count_int(7) AND 
	U1/U_freq_divider/count_int(8) AND U1/U_freq_divider/count_int(9) AND 
	U1/U_freq_divider/count_int(11) AND U1/U_freq_divider/count_int(12) AND 
	U1/U_freq_divider/count_int(13) AND U1/U_freq_divider/count_int(14) AND 
	U1/U_freq_divider/count_int(15));

FTCPE_U1/U_freq_divider/count_int17: FTCPE port map (U1/U_freq_divider/count_int(17),U1/U_freq_divider/count_int_T(17),clock,'0','0','1');
U1/U_freq_divider/count_int_T(17) <= (U1/U_freq_divider/count_int(0) AND 
	U1/U_freq_divider/count_int(10) AND U1/U_freq_divider/count_int(1) AND 
	U1/U_freq_divider/count_int(2) AND U1/U_freq_divider/count_int(3) AND 
	U1/U_freq_divider/count_int(4) AND U1/U_freq_divider/count_int(5) AND 
	U1/U_freq_divider/count_int(6) AND U1/U_freq_divider/count_int(7) AND 
	U1/U_freq_divider/count_int(8) AND U1/U_freq_divider/count_int(9) AND 
	U1/U_freq_divider/count_int(11) AND U1/U_freq_divider/count_int(12) AND 
	U1/U_freq_divider/count_int(13) AND U1/U_freq_divider/count_int(14) AND 
	U1/U_freq_divider/count_int(15) AND U1/U_freq_divider/count_int(16));

FTCPE_U1/U_freq_divider/count_int18: FTCPE port map (U1/U_freq_divider/count_int(18),U1/U_freq_divider/count_int_T(18),clock,'0','0','1');
U1/U_freq_divider/count_int_T(18) <= (U1/U_freq_divider/count_int(0) AND 
	U1/U_freq_divider/count_int(10) AND U1/U_freq_divider/count_int(1) AND 
	U1/U_freq_divider/count_int(2) AND U1/U_freq_divider/count_int(3) AND 
	U1/U_freq_divider/count_int(4) AND U1/U_freq_divider/count_int(5) AND 
	U1/U_freq_divider/count_int(6) AND U1/U_freq_divider/count_int(7) AND 
	U1/U_freq_divider/count_int(8) AND U1/U_freq_divider/count_int(9) AND 
	U1/U_freq_divider/count_int(11) AND U1/U_freq_divider/count_int(12) AND 
	U1/U_freq_divider/count_int(13) AND U1/U_freq_divider/count_int(14) AND 
	U1/U_freq_divider/count_int(15) AND U1/U_freq_divider/count_int(16) AND 
	U1/U_freq_divider/count_int(17));

FTCPE_U1/U_freq_divider/count_int19: FTCPE port map (U1/U_freq_divider/count_int(19),U1/U_freq_divider/count_int_T(19),clock,'0','0','1');
U1/U_freq_divider/count_int_T(19) <= (U1/U_freq_divider/count_int(0) AND 
	U1/U_freq_divider/count_int(10) AND U1/U_freq_divider/count_int(1) AND 
	U1/U_freq_divider/count_int(2) AND U1/U_freq_divider/count_int(3) AND 
	U1/U_freq_divider/count_int(4) AND U1/U_freq_divider/count_int(5) AND 
	U1/U_freq_divider/count_int(6) AND U1/U_freq_divider/count_int(7) AND 
	U1/U_freq_divider/count_int(8) AND U1/U_freq_divider/count_int(9) AND 
	U1/U_freq_divider/count_int(11) AND U1/U_freq_divider/count_int(12) AND 
	U1/U_freq_divider/count_int(13) AND U1/U_freq_divider/count_int(14) AND 
	U1/U_freq_divider/count_int(15) AND U1/U_freq_divider/count_int(16) AND 
	U1/U_freq_divider/count_int(17) AND U1/U_freq_divider/count_int(18));

FTCPE_U1/U_freq_divider/count_int20: FTCPE port map (U1/U_freq_divider/count_int(20),U1/U_freq_divider/count_int_T(20),clock,'0','0','1');
U1/U_freq_divider/count_int_T(20) <= (U1/U_freq_divider/count_int(0) AND 
	U1/U_freq_divider/count_int(10) AND U1/U_freq_divider/count_int(1) AND 
	U1/U_freq_divider/count_int(2) AND U1/U_freq_divider/count_int(3) AND 
	U1/U_freq_divider/count_int(4) AND U1/U_freq_divider/count_int(5) AND 
	U1/U_freq_divider/count_int(6) AND U1/U_freq_divider/count_int(7) AND 
	U1/U_freq_divider/count_int(8) AND U1/U_freq_divider/count_int(9) AND 
	U1/U_freq_divider/count_int(11) AND U1/U_freq_divider/count_int(12) AND 
	U1/U_freq_divider/count_int(13) AND U1/U_freq_divider/count_int(14) AND 
	U1/U_freq_divider/count_int(15) AND U1/U_freq_divider/count_int(16) AND 
	U1/U_freq_divider/count_int(17) AND U1/U_freq_divider/count_int(18) AND 
	U1/U_freq_divider/count_int(19));

FTCPE_U1/U_freq_divider/count_int21: FTCPE port map (U1/U_freq_divider/count_int(21),U1/U_freq_divider/count_int_T(21),clock,'0','0','1');
U1/U_freq_divider/count_int_T(21) <= (U1/U_freq_divider/count_int(0) AND 
	U1/U_freq_divider/count_int(10) AND U1/U_freq_divider/count_int(1) AND 
	U1/U_freq_divider/count_int(2) AND U1/U_freq_divider/count_int(3) AND 
	U1/U_freq_divider/count_int(4) AND U1/U_freq_divider/count_int(5) AND 
	U1/U_freq_divider/count_int(6) AND U1/U_freq_divider/count_int(7) AND 
	U1/U_freq_divider/count_int(8) AND U1/U_freq_divider/count_int(9) AND 
	U1/U_freq_divider/count_int(11) AND U1/U_freq_divider/count_int(12) AND 
	U1/U_freq_divider/count_int(13) AND U1/U_freq_divider/count_int(14) AND 
	U1/U_freq_divider/count_int(15) AND U1/U_freq_divider/count_int(16) AND 
	U1/U_freq_divider/count_int(17) AND U1/U_freq_divider/count_int(18) AND 
	U1/U_freq_divider/count_int(19) AND U1/U_freq_divider/count_int(20));

FDCPE_U1/U_risingedge_detector/anemometer_reg: FDCPE port map (U1/U_risingedge_detector/anemometer_reg,anemometer,clock,'0','0','1');

FDCPE_U1/counter_ena: FDCPE port map (U1/counter_ena,U1/counter_ena_D,clock,'0','0','1');
U1/counter_ena_D <= ((anemometer AND 
	NOT U1/U_risingedge_detector/anemometer_reg)
	OR (NOT code_select AND NOT anemometer AND 
	U1/U_risingedge_detector/anemometer_reg));

FDCPE_U1/counter_rst: FDCPE port map (U1/counter_rst,U1/counter_rst_D,clock,'0','0','1');
U1/counter_rst_D <= (NOT U1/U_freq_divider/count_int(0) AND 
	NOT U1/U_freq_divider/count_int(10) AND NOT U1/U_freq_divider/count_int(1) AND 
	NOT U1/U_freq_divider/count_int(2) AND NOT U1/U_freq_divider/count_int(3) AND 
	NOT U1/U_freq_divider/count_int(4) AND NOT U1/U_freq_divider/count_int(5) AND 
	NOT U1/U_freq_divider/count_int(6) AND NOT U1/U_freq_divider/count_int(7) AND 
	NOT U1/U_freq_divider/count_int(8) AND NOT U1/U_freq_divider/count_int(9) AND 
	NOT U1/U_freq_divider/count_int(11) AND NOT U1/U_freq_divider/count_int(12) AND 
	NOT U1/U_freq_divider/count_int(13) AND NOT U1/U_freq_divider/count_int(14) AND 
	NOT U1/U_freq_divider/count_int(15) AND NOT U1/U_freq_divider/count_int(16) AND 
	NOT U1/U_freq_divider/count_int(17) AND NOT U1/U_freq_divider/count_int(18) AND 
	NOT U1/U_freq_divider/count_int(19) AND NOT U1/U_freq_divider/count_int(20) AND 
	NOT U1/U_freq_divider/count_int(21));

FDCPE_U1/speed_code0: FDCPE port map (U1/speed_code(0),U1/U_counter_5bit/count_int(0),clock,'0','0',U1/counter_rst);

FDCPE_U1/speed_code1: FDCPE port map (U1/speed_code(1),U1/U_counter_5bit/count_int(1),clock,'0','0',U1/counter_rst);

FDCPE_U1/speed_code2: FDCPE port map (U1/speed_code(2),U1/U_counter_5bit/count_int(2),clock,'0','0',U1/counter_rst);

FDCPE_U1/speed_code3: FDCPE port map (U1/speed_code(3),U1/U_counter_5bit/count_int(3),clock,'0','0',U1/counter_rst);

FDCPE_U1/speed_code4: FDCPE port map (U1/speed_code(4),U1/U_counter_5bit/count_int(4),clock,'0','0',U1/counter_rst);


code_wind_speed(0) <= (weathercock(0) AND NOT mode_select)
	XOR ((mode_select AND NOT U1/speed_code(4) AND 
	NOT U1/speed_code(3) AND NOT U1/speed_code(2))
	OR (NOT mode_select AND weathercock(3) AND weathercock(2) AND 
	weathercock(1) AND NOT code_select)
	OR (NOT mode_select AND weathercock(3) AND NOT weathercock(2) AND 
	NOT weathercock(1) AND NOT code_select)
	OR (NOT mode_select AND NOT weathercock(3) AND weathercock(2) AND 
	NOT weathercock(1) AND NOT code_select)
	OR (NOT mode_select AND NOT weathercock(3) AND NOT weathercock(2) AND 
	weathercock(1) AND NOT code_select));


code_wind_speed(1) <= (NOT mode_select AND weathercock(1))
	XOR ((NOT mode_select AND weathercock(3) AND NOT weathercock(2) AND 
	NOT code_select)
	OR (NOT mode_select AND NOT weathercock(3) AND weathercock(2) AND 
	NOT code_select)
	OR (mode_select AND NOT U1/speed_code(4) AND 
	NOT U1/speed_code(3) AND NOT U1/speed_code(2) AND NOT U1/speed_code(0))
	OR (mode_select AND NOT U1/speed_code(4) AND 
	NOT U1/speed_code(3) AND NOT U1/speed_code(2) AND NOT U1/speed_code(1)));


code_wind_speed(2) <= (NOT mode_select AND weathercock(2))
	XOR ((NOT mode_select AND weathercock(3) AND NOT code_select)
	OR (mode_select AND NOT U1/speed_code(4) AND 
	NOT U1/speed_code(3) AND NOT U1/speed_code(2) AND NOT U1/speed_code(1)));


code_wind_speed(3) <= ((NOT mode_select AND weathercock(3))
	OR (mode_select AND NOT U1/speed_code(4) AND 
	NOT U1/speed_code(3) AND NOT U1/speed_code(2) AND NOT U1/speed_code(0) AND 
	NOT U1/speed_code(1)));


wind_dir_speed(0) <= NOT (((mode_select AND U1/speed_code(4) AND 
	U1/speed_code(3))
	OR (mode_select AND U1/speed_code(4) AND 
	U1/speed_code(2))
	OR (weathercock(0) AND NOT mode_select AND NOT weathercock(3) AND 
	weathercock(2) AND weathercock(1))));


wind_dir_speed(1) <= NOT (((mode_select AND U1/speed_code(4) AND 
	U1/speed_code(3))
	OR (mode_select AND U1/speed_code(4) AND 
	U1/speed_code(2))
	OR (mode_select AND U1/speed_code(4) AND 
	U1/speed_code(0) AND U1/speed_code(1))
	OR (NOT weathercock(0) AND NOT mode_select AND NOT weathercock(3) AND 
	weathercock(2) AND weathercock(1))));


wind_dir_speed(2) <= NOT ((mode_select AND U1/speed_code(4))
	XOR ((NOT weathercock(0) AND NOT mode_select AND NOT weathercock(3) AND 
	weathercock(2) AND NOT weathercock(1))
	OR (mode_select AND U1/speed_code(4) AND 
	NOT U1/speed_code(3) AND NOT U1/speed_code(2) AND NOT U1/speed_code(1))));


wind_dir_speed(3) <= NOT ((mode_select AND U1/speed_code(4))
	XOR ((weathercock(0) AND NOT mode_select AND NOT weathercock(3) AND 
	weathercock(2) AND NOT weathercock(1))
	OR (mode_select AND U1/speed_code(4) AND 
	NOT U1/speed_code(3) AND NOT U1/speed_code(2) AND NOT U1/speed_code(0) AND 
	NOT U1/speed_code(1))));


wind_dir_speed(4) <= NOT (((mode_select AND U1/speed_code(4))
	OR (weathercock(0) AND NOT mode_select AND NOT weathercock(3) AND 
	NOT weathercock(2) AND NOT weathercock(1))));


wind_dir_speed(5) <= NOT (((mode_select AND U1/speed_code(4))
	OR (NOT weathercock(0) AND NOT mode_select AND NOT weathercock(3) AND 
	NOT weathercock(2) AND NOT weathercock(1))
	OR (mode_select AND U1/speed_code(3) AND 
	U1/speed_code(2) AND U1/speed_code(0) AND U1/speed_code(1))));


wind_dir_speed(6) <= NOT (((mode_select AND U1/speed_code(4))
	OR (mode_select AND U1/speed_code(3) AND 
	U1/speed_code(2) AND U1/speed_code(1))
	OR (NOT weathercock(0) AND NOT mode_select AND NOT weathercock(3) AND 
	NOT weathercock(2) AND weathercock(1))));


wind_dir_speed(7) <= NOT (((mode_select AND U1/speed_code(4))
	OR (mode_select AND U1/speed_code(3) AND 
	U1/speed_code(2) AND U1/speed_code(0))
	OR (mode_select AND U1/speed_code(3) AND 
	U1/speed_code(2) AND U1/speed_code(1))
	OR (weathercock(0) AND NOT mode_select AND NOT weathercock(3) AND 
	NOT weathercock(2) AND weathercock(1))));


wind_dir_speed(8) <= NOT (((mode_select AND U1/speed_code(4))
	OR (mode_select AND U1/speed_code(3) AND 
	U1/speed_code(2))
	OR (weathercock(0) AND NOT mode_select AND weathercock(3) AND 
	NOT weathercock(2) AND weathercock(1))));


wind_dir_speed(9) <= NOT (((mode_select AND U1/speed_code(4))
	OR (mode_select AND U1/speed_code(3) AND 
	U1/speed_code(2))
	OR (mode_select AND U1/speed_code(3) AND 
	U1/speed_code(0) AND U1/speed_code(1))
	OR (NOT weathercock(0) AND NOT mode_select AND weathercock(3) AND 
	NOT weathercock(2) AND weathercock(1))));


wind_dir_speed(10) <= NOT (((mode_select AND U1/speed_code(4))
	OR (mode_select AND U1/speed_code(3) AND 
	U1/speed_code(2))
	OR (mode_select AND U1/speed_code(3) AND 
	U1/speed_code(1))
	OR (NOT weathercock(0) AND NOT mode_select AND weathercock(3) AND 
	NOT weathercock(2) AND NOT weathercock(1))));


wind_dir_speed(11) <= NOT (mode_select
	XOR ((mode_select AND NOT U1/speed_code(4) AND 
	NOT U1/speed_code(3))
	OR (weathercock(0) AND NOT mode_select AND weathercock(3) AND 
	NOT weathercock(2) AND NOT weathercock(1))
	OR (mode_select AND NOT U1/speed_code(4) AND 
	NOT U1/speed_code(2) AND NOT U1/speed_code(0) AND NOT U1/speed_code(1))));


wind_dir_speed(12) <= NOT (((mode_select AND U1/speed_code(4))
	OR (mode_select AND U1/speed_code(3))
	OR (weathercock(0) AND NOT mode_select AND weathercock(3) AND 
	weathercock(2) AND NOT weathercock(1))));


wind_dir_speed(13) <= NOT (((mode_select AND U1/speed_code(4))
	OR (mode_select AND U1/speed_code(3))
	OR (mode_select AND U1/speed_code(2) AND 
	U1/speed_code(0) AND U1/speed_code(1))
	OR (NOT weathercock(0) AND NOT mode_select AND weathercock(3) AND 
	weathercock(2) AND NOT weathercock(1))));


wind_dir_speed(14) <= NOT (((mode_select AND U1/speed_code(4))
	OR (mode_select AND U1/speed_code(3))
	OR (mode_select AND U1/speed_code(2) AND 
	U1/speed_code(1))
	OR (NOT weathercock(0) AND NOT mode_select AND weathercock(3) AND 
	weathercock(2) AND weathercock(1))));


wind_dir_speed(15) <= NOT (mode_select
	XOR ((mode_select AND NOT U1/speed_code(4) AND 
	NOT U1/speed_code(3) AND NOT U1/speed_code(2))
	OR (weathercock(0) AND NOT mode_select AND weathercock(3) AND 
	weathercock(2) AND weathercock(1))
	OR (mode_select AND NOT U1/speed_code(4) AND 
	NOT U1/speed_code(3) AND NOT U1/speed_code(0) AND NOT U1/speed_code(1))));


Register Legend:
 FDCPE (Q,D,C,CLR,PRE,CE); 
 FDDCPE (Q,D,C,CLR,PRE,CE); 
 FTCPE (Q,D,C,CLR,PRE,CE); 
 FTDCPE (Q,D,C,CLR,PRE,CE); 
 LDCP  (Q,D,G,CLR,PRE); 

******************************  Device Pin Out *****************************

Device : XC2C64A-7-VQ44


   --------------------------------  
  /44 43 42 41 40 39 38 37 36 35 34 \
 | 1                             33 | 
 | 2                             32 | 
 | 3                             31 | 
 | 4                             30 | 
 | 5         XC2C64A-7-VQ44      29 | 
 | 6                             28 | 
 | 7                             27 | 
 | 8                             26 | 
 | 9                             25 | 
 | 10                            24 | 
 | 11                            23 | 
 \ 12 13 14 15 16 17 18 19 20 21 22 /
   --------------------------------  


Pin Signal                         Pin Signal                        
No. Name                           No. Name                          
  1 wind_dir_speed<14>               23 KPR                           
  2 wind_dir_speed<15>               24 TDO                           
  3 code_wind_speed<0>               25 GND                           
  4 GND                              26 VCCIO-3.3                     
  5 code_wind_speed<1>               27 wind_dir_speed<0>             
  6 code_wind_speed<2>               28 KPR                           
  7 VCCIO-3.3                        29 wind_dir_speed<1>             
  8 code_wind_speed<3>               30 KPR                           
  9 TDI                              31 wind_dir_speed<2>             
 10 TMS                              32 wind_dir_speed<3>             
 11 TCK                              33 wind_dir_speed<4>             
 12 weathercock<0>                   34 wind_dir_speed<5>             
 13 weathercock<1>                   35 VCCAUX                        
 14 weathercock<2>                   36 wind_dir_speed<6>             
 15 VCC                              37 wind_dir_speed<7>             
 16 weathercock<3>                   38 wind_dir_speed<8>             
 17 GND                              39 wind_dir_speed<9>             
 18 anemometer                       40 wind_dir_speed<10>            
 19 KPR                              41 wind_dir_speed<11>            
 20 code_select                      42 wind_dir_speed<12>            
 21 KPR                              43 clock                         
 22 mode_select                      44 wind_dir_speed<13>            


Legend :  NC  = Not Connected, unbonded pin
        PGND  = Unused I/O configured as additional Ground pin
         KPR  = Unused I/O with weak keeper (leave unconnected)
         WPU  = Unused I/O with weak pull up (leave unconnected)
         TIE  = Unused I/O floating -- must tie to VCC, GND or other signal
         VCC  = Dedicated Power Pin
      VCCAUX  = Power supply for JTAG pins
   VCCIO-3.3  = I/O supply voltage for LVTTL, LVCMOS33, SSTL3_I
   VCCIO-2.5  = I/O supply voltage for LVCMOS25, SSTL2_I
   VCCIO-1.8  = I/O supply voltage for LVCMOS18
   VCCIO-1.5  = I/O supply voltage for LVCMOS15, HSTL_I
        VREF  = Reference voltage for indicated input standard
       *VREF  = Reference voltage pin selected by software
         GND  = Dedicated Ground Pin
         TDI  = Test Data In, JTAG pin
         TDO  = Test Data Out, JTAG pin
         TCK  = Test Clock, JTAG pin
         TMS  = Test Mode Select, JTAG pin
  PROHIBITED  = User reserved pin
****************************  Compiler Options  ****************************

Following is a list of all global compiler options used by the fitter run.

Device(s) Specified                         : xc2c64a-7-VQ44
Optimization Method                         : DENSITY
Multi-Level Logic Optimization              : ON
Ignore Timing Specifications                : OFF
Default Register Power Up Value             : LOW
Keep User Location Constraints              : ON
What-You-See-Is-What-You-Get                : OFF
Exhaustive Fitting                          : OFF
Keep Unused Inputs                          : OFF
Slew Rate                                   : FAST
Set Unused I/O Pin Termination              : KEEPER
Global Clock Optimization                   : ON
Global Set/Reset Optimization               : ON
Global Ouput Enable Optimization            : ON
Enable Input Registers                      : ON
Function Block Fan-in Limit                 : 38
Use DATA_GATE Attribute                     : ON
Set Tristate Outputs to Termination Mode    : KEEPER
Default Voltage Standard for All Outputs    : LVCMOS18
Input Limit                                 : 32
Pterm Limit                                 : 28
</pre>
<form><span class="pgRef"><table width="90%" align="center"><tr>
<td align="left"><input type="button" onclick="javascript:parent.leftnav.showTop()" onmouseover="window.status='goto top of page'; return true;" onmouseout="window.status=''" value="back to top"></td>
<td align="right"><input type="button" onclick="window.print()" onmouseover="window.status='print page'; return true;" onmouseout="window.status=''" value="print page"></td>
</tr></table></span></form>
</body></html>
